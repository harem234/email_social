# Generated by Django 5.2.1 on 2025-05-23 21:10

import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import user.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('mobile_phone', models.CharField(blank=True, help_text='at most 19 characters of digits only', max_length=19, null=True, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?\\d{8,15}$')], verbose_name='mobile phone')),
                ('username', models.CharField(blank=True, error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, null=True, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_email_verified', models.BooleanField(default=False, verbose_name='is email verified')),
                ('is_mobile_phone_verified', models.BooleanField(default=False, help_text='must verified with otp', verbose_name='is mobile phone verified')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('site', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='sites', to='sites.site')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', user.models.EmailUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='OTPToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('send_by', models.PositiveSmallIntegerField(choices=[(0, 'SMS'), (1, 'Email')], default=1, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('expire_at', models.DateTimeField(auto_now=True, verbose_name='expire at')),
                ('otp_token', models.CharField(editable=False, max_length=19, verbose_name='otp token')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Generated'), (2, 'Verified'), (3, 'Not Verified'), (0, 'EMPTY')], default=0, verbose_name='status')),
                ('log_mobile_phone', models.CharField(blank=True, help_text='at most 19 characters of digits only', max_length=19, verbose_name='log mobile phone')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='tokens', related_query_name='tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user_id', '-created_at', '-expire_at'],
            },
        ),
    ]
